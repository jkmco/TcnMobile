// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TCN.Persistence;

namespace TCN.Migrations
{
    [DbContext(typeof(TcnDbContext))]
    [Migration("20180227132545_ModifyTransaction")]
    partial class ModifyTransaction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TCN.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MaxLimit");

                    b.Property<int>("MinLimit");

                    b.Property<int>("Price");

                    b.Property<int>("TransactionCoinId");

                    b.Property<int>("TransactionFxId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TransactionCoinId");

                    b.HasIndex("TransactionFxId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TCN.Models.TransactionCoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TransactionCoins");
                });

            modelBuilder.Entity("TCN.Models.TransactionFx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.ToTable("TransactionFxs");
                });

            modelBuilder.Entity("TCN.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TCN.Models.Transaction", b =>
                {
                    b.HasOne("TCN.Models.TransactionCoin", "Coin")
                        .WithMany()
                        .HasForeignKey("TransactionCoinId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TCN.Models.TransactionFx", "Fx")
                        .WithMany()
                        .HasForeignKey("TransactionFxId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TCN.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
